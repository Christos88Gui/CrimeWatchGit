@{
    Layout = "";
}
@{
    ViewBag.Title = "Map page";
}
@model List<CrimeWatch.Models.Crime>
@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")

<button class="btn loginBtns" onclick="location.href='@Url.Action("Index", "Home")'"> <span class="glyphicon glyphicon-arrow-left"></span> Return to Home</button>
<br /><br />

<div id="loading_div">
    <img src="~/Content/Images/progress_ring.gif" id="progress_ring" />
    <br /><br /><h2>Loading Map...</h2>
</div>

<div id="map"></div>

<div class="container" id="searchContainer">
    <div class="input-group">
        <input id="address" type="text" class="form-control" placeholder="Search for...">
        <span class="input-group-btn">
            <button class="btn btn-default" type="button" id="search"><span class="glyphicon glyphicon-search"></span></button>
        </span>
    </div>
</div>

<div class="container" id="filterContainer">
    <form action="/Map/Index" method="post">
        <h3 style="text-align:center">Filters</h3>
        <br />
        <p>Time period</p>
        <label class="radio-inline"><input type="radio" name="optradio">2016</label>
        <label class="radio-inline"><input type="radio" name="optradio">2017</label>
        <label class="radio-inline"><input type="radio" name="optradio">Both</label>
        <br /><br />
        <p>Type of crime</p>
        <select class="form-control" name="type">
            <option selected>No filter</option>
            <option>Drugs</option>
            <option>Anti-social behaviour</option>
            <option>Burglary</option>
        </select>
        <br />
        <input type="submit" class="btn btn-default" value="Submit">
        <button class="btn-xs btn-default" style="float:right; border: 1px solid black; font-size:12px; background-color:lightcoral">Reset filters</button>
        <br /><br /><br />
    </form>
</div>


<style>
    body {
        background: black;
        height: 100%;
    }

    #map {
        position: relative;
        height: 100%;
        display: none;
        color: black;
        border: 1px solid black;
    }

    #searchContainer {
        color: black;
        height: auto;
        display: none;
        margin-top: 1%;
    }

    #filterContainer {
        background: darkgray;
        border: 1px solid;
        height: 80%;
        border-radius: 4px;
        font-size: 14px;
        display: none;
        color: black;
        margin-left: 10px;
        margin-top: 25px;
    }

    #loading_div {
        margin-top: 15%;
        text-align: center
    }

    #progress_ring {
        width: 150px;
        height: 150px;
    }

    #address {
        -webkit-transition: width 0.4s ease-in-out;
        transition: width 0.4s ease-in-out;
    }
    .loginBtns {
        position: relative;
        width: auto;
        height: auto;
        font-size: 17px;
        background-color: transparent;
        color: white;
        border: 2px solid white;
    }

        .loginBtns:hover {
            width: auto;
            height: auto;
            font-size: 17px;
            background-color: white;
            color: black;
            border: 2px solid black;
        }
</style>





<script>

    function initializeMap(position) {
        var mapPosition = document.getElementById('map');
        var initialPosition = { lat: 51.502775, lng: -0.119927 };
        var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';

        if (position != null) {
            var initialPosition = { lat: position.coords.latitude, lng: position.coords.longitude };
        }

        var mapOptions = {
            center: initialPosition,
            zoom: 14,
        };

        var map = new google.maps.Map(mapPosition, mapOptions);

        var marker = new google.maps.Marker({
            position: initialPosition,
            icon: iconBase + 'library_maps.png',
            map: map,

        });

        var infowindow = new google.maps.InfoWindow({
            content: "<p><b>Your location!</></p>"
        });

        marker.addListener('click', function () {
            infowindow.open(map, marker);
        });

        var geocoder = new google.maps.Geocoder();
        document.getElementById('search').addEventListener('click', function () {
            geocodeAddress(geocoder, map);
        });

        addMarkers(map);
    }

    function addMarkers(map) {
        var crimes = [];
        var infowindow = new google.maps.InfoWindow();
        var marker = [], i;
        var searchContainer = document.getElementById('searchContainer');
        var filterContainer = document.getElementById('filterContainer');


        @foreach (var crime in Model) {
            @:crimes.push(["@crime.Latitude", "@crime.Longitude","@crime.Type","@crime.Date.Value.ToString("MMMM, yyyy")","@crime.Police_Department", "@crime.Location","@crime.Outcome"]);
        }

        for (i = 0; i < crimes.length; i++) {
            marker[i] = new google.maps.Marker({
                position: new google.maps.LatLng(crimes[i][0], crimes[i][1]),
                map: map
            });

            google.maps.event.addListener(marker[i], 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent("<br><p><b>Crime Type: </b> " + crimes[i][2] + "</p><p><b>Date:</b> " + crimes[i][3] + "</p><p><b>Department </b> " + crimes[i][4] + "</p><p><b>Exact Location: </b> " + crimes[i][5] + "<p><b>Outcome: </b> " + crimes[i][6] );
                    infowindow.open(map, marker[i]);
                }
            })(marker, i));
        }
        var mapOptions = { maxZoom: 15, imagePath: 'https://raw.githubusercontent.com/googlemaps/js-marker-clusterer/gh-pages/images/m' };
        var markerCluster = new MarkerClusterer(map, marker, mapOptions);
        map.controls[google.maps.ControlPosition.TOP].push(searchContainer);
        map.controls[google.maps.ControlPosition.LEFT_CENTER].push(filterContainer);

        document.getElementById('loading_div').style.display = "none";
        document.getElementById('searchContainer').style.display = "block";
        document.getElementById('filterContainer').style.display = "block";
        document.getElementById('map').style.display = "block";
    }



    function requestLocation() {
        navigator.geolocation.getCurrentPosition(initializeMap);

    }

    function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        if (address != "") {
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status === 'OK') {
                    resultsMap.setCenter(results[0].geometry.location);
                    resultsMap.zoom = 40;
                    var marker = new google.maps.Marker({
                        position: results[0].geometry.location,
                        map: resultsMap
                    });
                } else {
                    alert('The location could not be found.');
                }
            });
        }
    }

</script>
<script src="~/Scripts/markerClustering.js">
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD_rXEE2-a_KrNsOkLH0sxMr96NVZjaiTI&callback=requestLocation">
</script>